How to compile the tools:

First build the utility files used by the tools.

g++ -Wall -O3 -o fileutil.o -c fileutil.cpp
g++ -Wall -O3 -o strutil.o -c strutil.cpp


Architecture detector:
gcc -Wall -O3 -o archopt.exe archopt.c

Cut Redundant ASM Typecasts:
g++ -Wall -O3 -o cutrtype.exe cutrtype.cpp fileutil.o strutil.o

Dependency Builder:
g++ -Wall -O3 -o depbuild.exe depbuild.cpp fileutil.o strutil.o

Extra EXTSYMs:
g++ -Wall -O3 -o extraext.exe extraext.cpp fileutil.o strutil.o

Minimize Whitespace:
g++ -Wall -O3 -o minwhite.exe minwhite.cpp fileutil.o

Nach's Replacer:
g++ -Wall -O3 -o nreplace.exe nreplace.cpp fileutil.o

Section Tester:
g++ -Wall -O3 -o sec-test.exe sec-test.cpp fileutil.o strutil.o

Source Counter:
g++ -Wall -O3 -o srccount.exe srccount.cpp fileutil.o

Macro Unroller:
g++ -Wall -O3 -o macroll.exe macroll.cpp fileutil.o strutil.o

Variable Replacer:
g++ -Wall -O3 -o varrep.exe varrep.cpp fileutil.o strutil.o

All the tools scan every compatible file they find from the directory they are
in. It also scans all sub directories recursively.

Extra EXTSYMs accepts command line arguments. You can specify filenames to put
on the can't be opened ignore list.

Nach's Replacer accept parameters for various files, and -r for recursive
directory support.

Dependency Builder requires parameters for CC, CFLAGS, NASM, NASM_FLAGS.
Example: depbuild gcc "-I/usr/include -D__UNIXSDL__  -O3 -march=athlon64" nasm
          "-D__UNIXSDL__ -f elf -DELF -D__OPENGL__ -O1"

Macro Unroller has the macro as parameter passed to it.
Example: macroll DiffOrNot w4,w2,PIXEL00_0,PIXEL00_100

Variable Replacer requires parameters for variable file, variable prefix
and suffix. It can also optionally take a file list. Variable file should
contain each variable on a line by itself.
Example: varrep vf.txt "DSP4_vars." "" chips/dsp4emu.c
